# Generated by Django 3.0.4 on 2020-04-09 12:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('config', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, verbose_name='DynDNS for this zone is enabled.')),
                ('owners', models.ManyToManyField(help_text='Users that are allowed to modify this object. Staff users can modify all objects.', related_name='owned_dyndns_zone', to=settings.AUTH_USER_MODEL, verbose_name='Owners')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zone_dyndns', to='config.Zone', verbose_name='Zone configuration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Hostname', max_length=255)),
                ('token', models.CharField(default='UGpLwP3i2uNexkZTaocsgGpA0kvMAU7d', help_text='Authorization token for updating this host', max_length=255)),
                ('last_update', models.DateTimeField(blank=True, editable=False, help_text='Last successful update.', null=True, verbose_name='Last update')),
                ('owners', models.ManyToManyField(help_text='Users that are allowed to modify this object. Staff users can modify all objects.', related_name='owned_dyndns_host', to=settings.AUTH_USER_MODEL, verbose_name='Owners')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='dyndns.Zone', verbose_name='Zone')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
